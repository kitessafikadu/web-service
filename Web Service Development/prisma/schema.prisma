// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
   provider = "prisma-client-js"
}


datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Student {
  id         Int          @id @default(autoincrement())
  firstName  String
  lastName   String
  email      String       @unique
  dob        DateTime
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  enrollments Enrollment[]
}

model Teacher {
  id         Int       @id @default(autoincrement())
  firstName  String
  lastName   String
  email      String    @unique
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  courses    Course[]
}

model Course {
  id         Int          @id @default(autoincrement())
  name       String
  code       String       @unique
  teacherId  Int
  teacher    Teacher      @relation(fields: [teacherId], references: [id])
  enrollments Enrollment[]
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
}

model Enrollment {
  id         Int       @id @default(autoincrement())
  studentId  Int
  courseId   Int
  grade      Float?     // grade can be nullable if not assigned yet
  student    Student   @relation(fields: [studentId], references: [id])
  course     Course    @relation(fields: [courseId], references: [id])
  enrolledAt DateTime  @default(now())

  @@unique([studentId, courseId]) // prevents duplicate enrollments
}
